# general settings
#name: FLIM3D_PECBNet_sparse_frames_2
#name: FLIM3D_PECBNet_sparse_frames_3
name: FLIM3D_PECBNet_sparse_frames_4
model_type: VideoRecurrentModel
scale: 1
num_gpu: 1
manual_seed: 0

datasets:
  train:
    name: FLIM_3D
    type: train3DDataset
    dataroot_gt: datasets/ben_frames/splitting_4/trainB
#    dataroot_lq: datasets/ben_frames/temporal_sparsity/sparsity_2/trainA
    dataroot_lq: datasets/ben_frames/temporal_sparsity/sparsity_4/trainA

#    dataroot_gt: datasets/ben_frames/temporal_sparsity/sparsity_3/trainB
#    dataroot_lq: datasets/ben_frames/temporal_sparsity/sparsity_3/trainA

    test_mode: False
    io_backend:
      type: disk

    random_reverse: false
    use_hflip: true
    use_rot: true
    gray: true # set to true if num_in_ch (network_g) = 1

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 2
    batch_size_per_gpu: 1
    dataset_enlarge_ratio: 100
    prefetch_mode: ~

  val:
    name: FLIM_3D
    type: VideoRecurrentTestDataset
    dataroot_gt: datasets/ben_frames/splitting_4/valB
#    dataroot_lq: datasets/ben_frames/temporal_sparsity/sparsity_2/valA
    dataroot_lq: datasets/ben_frames/temporal_sparsity/sparsity_4/valA

#    dataroot_gt: datasets/ben_frames/temporal_sparsity/sparsity_3/valB
#    dataroot_lq: datasets/ben_frames/temporal_sparsity/sparsity_3/valA
    cache_data: true
    io_backend:
      type: disk
    gray: true # set to true if num_in_ch (network_g) = 1

# network structures
network_g:
  type: PECBNet_TS
  num_feat: 64
  num_block: 8
  num_in_ch: 1
  upscale: 1
#  upscale_time: 2
  upscale_time: 4
#  upscale_time: 3
#  keyframes: [8, 12]
  keyframes: [8]

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: CosineAnnealingRestartLR
    periods: [300000]
    restart_weights: [1]
    eta_min: !!float 1e-7

  total_iter: 100000
  warmup_iter: -1  # no warm up
  fix_flow: 5000


  # losses
  pixel_opt:
    type: CharbonnierLoss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 1e1
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
    ssim:
      type: calculate_ssim
      crop_border: 0


# logging settings
logger:
  print_freq: 10
  save_checkpoint_freq: !!float 1e1
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500

find_unused_parameters: true
